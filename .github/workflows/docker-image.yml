name: Docker CI

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - main  # 监听对 main 分支的推送
    tags:
      - 'v*.*.*'  # 监听以 v 开头的语义化版本标签的推送

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  REPO_NAME: sub-web-momov587 # 仓库名，最好也定义成 env 变量

jobs:
  build-and-push: # Job 名称可以更具体一些
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-platform build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 镜像名称列表
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}
          # 标签生成规则
          tags: |
            # 当事件是推送到 main 分支时，生成 latest 标签
            type=raw,value=latest,enable={{is_default_branch}}

            # 当事件是推送语义化版本标签时（如 v1.2.3）
            # 1. 生成版本号标签 (e.g., v1.2.3)
            # 2. 同时也生成 latest 标签，覆盖掉 main 分支的 latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            
            # 当推送新 tag 时，也把它设为 latest
            type=ref,event=tag,value=latest

            # (可选) 生成基于 commit SHA 的标签，用于调试
            type=sha,prefix=commit-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Docker Hub description
        # 只有在 main 分支或打了新 tag 时才更新描述，避免调试时也更新
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}
